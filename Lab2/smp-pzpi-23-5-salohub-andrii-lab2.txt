МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИКАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇЗвітз лабораторної роботи № 2 з дисципліниСкриптові мови програмуванняВиконала:                                                                         Перевірив:ст. гр. ПЗПІ-23-5                        				ст. викладач кафедри ПІСалогуб Андрій 						          Сокорчук Ігор ПетровичХарків 2025
1 ІСТОРІЯ ЗМІН№ДатаВерсія звітуОпис змін та виправлень113.05.20250.1Створено розділ “Історія Змін”
2 ЗАВДАННЯ     Потрібно створити консольний застосунок «Продовольчий магазин "Весна"».     Ім'я скрипта: ~/імʼя_облікового_запису-task3.php     Наприклад: ~/pzpi-27-15-shukhevych-roman-task3.php     Програма після запуску повинна вивести на термінал перелік можливих дій:########################################## ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" ##########################################1 Вибрати товари2 Отримати підсумковий рахунок3 Налаштувати свій профіль0 Вийти з програмиВведіть команду: _     Далі програма очікує введення значення з клавіатури. Якщо користувач вводить число, якого немає в списку можливих команд, необхідно вивести повідомлення про помилку і запропонувати користувачу ввести інше число:	Введіть команду: 4ПОМИЛКА! Введіть правильну команду1 Вибрати товари2 Отримати підсумковий рахунок3 Налаштувати свій профіль0 Вийти з програмиВведіть команду: _     Щоб розпочати купувати товари, необхідно ввести число «1», після чого користувач повинен потрапити в режим закупівлі товарів.     На екрані має з’явитися перелік продуктів, де кожен рядок складається з номера, назви товару і його вартості, наприклад:Введіть команду: 1№  НАЗВА                            ЦІНА1  Молоко пастеризоване  122  Хліб чорний                     93  Сир білий                         214  Сметана 20%                   255  Кефір 1%                          196  Вода газована                  187  Печиво "Весна"              14   -----------0  ПОВЕРНУТИСЯВиберіть товар: _     Щоб купити товар, необхідно ввести його номер.     Після успішної перевірки на існування номера товару в списку, програма має попросити ввести кількість товару:Виберіть товар: 2Вибрано: Хліб чорнийВведіть кількість, штук: 1У КОШИКУ:НАЗВА           КІЛЬКІСТЬХліб чорний  1     Якщо номер товару і його кількість (менше 100 шт.) були вказані коректно, то товар додається в кошик.     Якщо вказано кількість «0», то товар видаляється з кошика:Виберіть товар: 2Вибрано: Хліб чорнийВведіть кількість, штук: 0ВИДАЛЯЮ З КОШИКАКОШИК ПОРОЖНІЙ     Далі знову відображається перелік товарів і пропонується купити наступний товар.     Якщо номер товару вказано неправильно, виводиться сповіщення про помилку, нову виводиться перелік товарів:№  НАЗВА                             ЦІНА1  Молоко пастеризоване   122  Хліб чорний                      93  Сир білий                          214  Сметана 20%                   255  Кефір 1%                          196  Вода газована                  187  Печиво "Весна"              14   -----------0  ПОВЕРНУТИСЯВиберіть товар: 8ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ     Щоб завершити купувати товари і перейти до попереднього меню, необхідно ввести з клавіатури цифру «0».     Щоб отримати підсумковий рахунок, потрібно ввести число «2».Рахунок має містити таку інформацію: №, назва, ціна товару, кількість товару, вартість товару. У кінці чека має бути: РАЗОМ ДО CПЛАТИ: сума_за_всі_товариНаприклад:Введіть команду: 2№  НАЗВА                            ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ1  Печиво "Весна"              14         1                       142  Молоко пастеризоване  12         2                       243  Сметана 20%                   25         1                       254  Хліб чорний                     9           1                       9РАЗОМ ДО CПЛАТИ: 72     Щоб встановити свій профіль потрібно, ввести число «3», після чого програма попросить ввести ваше ім'я та ваш вік:Ваше імʼя: _Ваш вік: _   Імʼя користувача не може бути порожнім і повинно містити хоча б одну літеру.Користувач не може бути молодшим 7-ми або старшим 150-ти роківЩоб завершити роботу та вийти з програми, потрібно ввести число «0».   У програмі потрібно перевіряти інформацію, яку вводить користувач, а саме:- обраний пункт меню існує;- обраний товар існує;- введена кількість товару більша нуля;- імʼя користувача містить хча б одну літеру;- вік користувача становить від 7-ми до 150-ти років.
3 ОПИС ВИКОНАНОЇ РОБОТИ     Розроблено PHP-скрипт для реалізації інтерактивного продовольчого магазину "Весна", який дозволяє користувачам налаштовувати профіль, вибирати товари з JSON-файлу та формувати чек. Скрипт обробляє вхідні дані, перевіряє їх коректність та виводить результати у текстовому форматі.     Визначено чотири змінні (рядки 3–6) для обмеження вхідних параметрів:- $MIN_AGE (7): мінімальний вік користувача;- $MAX_AGE (150): максимальний вік користувача;- $MIN_QUANTITY (0): мінімальна кількість товару;- $MAX_QUANTITY (100): максимальна кількість товару.3  $MIN_AGE = 7;4  $MAX_AGE = 150;5  $MIN_QUANTITY = 0;6  $MAX_QUANTITY = 100;     Функція loadProducts (рядки 8–24) зчитує дані про товари з файлу pzpi-23-5-salohub-andrii-task3_products.json (наповнення файлу наведено в додатку В.1). Основні етапи:1. Перевірка існування файлу (рядок 12). Якщо файл відсутній, програма завершується з повідомленням про помилку. 2. Зчитування JSON-даних (рядок 16) та їх декодування (рядок 17). 3. Перевірка коректності JSON (рядок 19). У разі помилки програма завершується з повідомленням. Функція повертає масив продуктів.8   function loadProducts()9   {10      $jsonFile = 'pzpi-23-5-salohub-andrii-task3_products.json';12      if (!file_exists($jsonFile)) {13          die("Помилка: Файл продуктів {$jsonFile} не знайдено");14      }15  16      $jsonData = file_get_contents($jsonFile);17      $products = json_decode($jsonData, true);19      if (json_last_error() !== JSON_ERROR_NONE) {20          die("Помилка при розборі JSON: " . json_last_error_msg());21      }23      return $products;24  }     Змінні ініціалізуються на рядках 26–30:- $products (рядок 26): масив товарів, отриманий через виклик loadProducts.- $cart (рядок 28): порожній масив для зберігання товарів у кошику.- $userName (рядок 29): ініціалізується як null для імені користувача.- $userAge (рядок 30): ініціалізується як null для віку користувача.     Ці змінні використовуються в функціях selectProducts, showReceipt та setupProfile.26  $products = loadProducts();28  $cart = [];29  $userName = null;30  $userAge = null;     Функція main (рядки 32–60), наведена в додатку В.2 керує основним циклом програми, вона виводить заголовок магазину (рядки 34–37), викликає showMenu для відображення меню (рядок 40), отримує команду через readline (рядок 41) та обробляє команду через switch і якщо, 0 завершує програму (рядок 45), якщо 1 викликає selectProducts (рядок 47), якщо 2 викликає showReceipt (рядок 50), якщо 3 викликає setupProfile (рядок 53), якщо ж була введена некоректна команда, то видає повідомлення про помилку (рядок 56).     Функція showMenu (рядки 62–68), результат виконання якої наведено на рис. Б.1 виводить меню з чотирма опціями: вибір товарів, отримання чека, налаштування профілю, вихід.62  function showMenu()63  {64      echo "1 Вибрати товари\n";65      echo "2 Отримати підсумковий рахунок\n";66      echo "3 Налаштувати свій профіль\n";67      echo "0 Вийти з програми\n";68  }     Функція selectProducts (рядки 70–141), наведена в додатку В.3 відповідає за вибір товарів і додавання їх до кошика. Вона викликає showProductsList (рядок 75) для відображення списку товарів, отримує вибір користувача (рядок 76), і якщо введено 0, повертається до головного меню (рядок 78). Перевіряється коректність номера товару (рядок 82), запитується кількість (рядок 89), яка має бути в межах MIN_QUANTITY та MAX_QUANTITY (рядок 91). Від’ємна кількість викликає помилку (рядок 96), нуль видаляє товар із кошика (рядки 99–101), а коректна кількість додає товар до кошика (рядок 125). Вміст кошика виводиться з форматуванням через custom_str_pad (рядки 112–136).     Функція showProductsList (рядки 156–171) формує таблицю товарів, вигляд таблиці наведено на рис. Б.2. Вона визначає ширину стовпця назви через getMaxNameLength (рядок 160), форматує заголовки "НАЗВА" і "ЦІНА" за допомогою custom_str_pad (рядок 162), виводить товари з номерами, назвами та цінами (рядок 167) і додає опцію повернення (рядок 170).156 function showProductsList()157 {158     global $products;160     $nameWidth = getMaxNameLength() + 1;162     $nameHeader = custom_str_pad('НАЗВА', $nameWidth);163     echo "№  {$nameHeader} ЦІНА\n";165     foreach ($products as $id => $product) {166         $paddedName = custom_str_pad($product['name'], $nameWidth);167         printf("%-2d %s %s\n", $id, $paddedName, $product['price']);168     }169     echo "   -----------\n";170     echo "0  ПОВЕРНУТИСЯ\n";171 }     Функція showReceipt (рядки 173–210), наведена в додатку В.4 генерує чек на основі кошика, вигляд чеку наведено на рис. Б.3. Якщо кошик порожній, виводиться повідомлення (рядки 176–178). Інакше формується таблиця з номером, назвою, ціною, кількістю та вартістю (рядок 186). Загальна сума обчислюється множенням ціни на кількість (рядки 194–195) і виводиться (рядок 208).     Функція setupProfile (рядки 212–244), наведена в додатку В.5 налаштовує профіль користувача, результат виконання функції наведено на рис. Б.4. Вона запитує ім’я (рядок 217), перевіряє наявність літер за допомогою регулярного виразу (рядок 219), запитує вік (рядок 229) і перевіряє, чи він у межах MIN_AGE та MAX_AGE (рядок 231). Дані зберігаються в $userName та $userAge і виводяться (рядки 241–242).     Функція getMaxNameLength (рядки 143–154) обчислює максимальну довжину назви товару в UTF-8 символах, викликаючи utf8_char_count, для коректного форматування таблиць. 143 function getMaxNameLength()144 {145     global $products;146     $maxLength = 0;147     foreach ($products as $product) {148         $length = utf8_char_count($product['name']);149         if ($length > $maxLength) {150             $maxLength = $length;151         }152     }153     return $maxLength;154 }     Функція utf8_char_count (рядки 246–267), наведена в додатку В.6 підраховує UTF-8 символи в рядку, аналізуючи байти: однобайтові (ASCII) додають 1 до лічильника (рядок 255), двобайтові — 2 (рядок 257), трьохбайтові — 3 (рядок 259), чотирибайтові — 4 (рядок 261).     Функція custom_str_pad (рядки 269–274) додає пробіли до рядка для досягнення заданої довжини, враховуючи UTF-8 символи, щоб вирівняти текст у таблицях.269 function custom_str_pad($string, $pad_length)270 {271     $char_count = utf8_char_count($string);272     $padding = max(0, $pad_length - $char_count);273     return $string . str_repeat(' ', $padding);274 }
ВИСНОВКИ     Розроблено PHP-скрипт для інтерактивного магазину "Весна", який завантажує товари з JSON-файлу, забезпечує вибір товарів із додаванням до кошика та видаленням, формує чек із деталізацією цін і загальною сумою, дозволяє налаштувати профіль із перевіркою імені та віку за константами MIN_AGE, MAX_AGE. Скрипт коректно обробляє вхідні дані, використовуючи MIN_QUANTITY, MAX_QUANTITY для перевірки кількості товарів, виводить повідомлення про помилки та підтримує UTF-8 символи для назв товарів.
ДОДАТОК АВідеозаписВідеозапис презентації результатів лабораторної роботи: https://youtu.be/tWXx3f6A68kХронологічний опис відеозапису:00:00 – Вступне представлення00:10 – Пояснення коду 06:30 – Демонстрація роботи скрипту
ДОДАТОК БГрафічні матеріалиРисунок Б.1 – Головне меню програмиРисунок Б.2 – Вигляд списку товарівРисунок Б.3 – Вигляд чекуРисунок Б.4 – Вигляд налаштування профілю
ДОДАТОК ВПрограмний кодВ.1 { smp-pzpi-23-5-salohub-andrii-lab2_products.json }GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab2/spm-pzpi-23-5-salohub-andrii-lab2/smp-pzpi-23-5-salohub-andrii-lab2_products.json1   {2     "1": {3       "name": "Молоко пастеризоване",4       "price": 125     },6     "2": {7       "name": "Хліб чорний",8       "price": 99     },10    "3": {11      "name": "Сир білий",12      "price": 2113    },14    "4": {15      "name": "Сметана 20%",16      "price": 2517    },18    "5": {19      "name": "Кефір 1%",20      "price": 1921    },22    "6": {23      "name": "Вода газована",24      "price": 1825    },26    "7": {27      "name": "Печиво \"Весна\"",28      "price": 1429    }30  }В.2 {  smp-pzpi-23-5-salohub-andrii-lab2-code.php }GitHub репозиторій: https://github.{…}/{ файл_з_програмним_кодом }32  function main()33  {34      echo "\n";35      echo "################################\n";36      echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";37      echo "################################\n";3839      while (true) {40          showMenu();41          $command = trim(readline("Введіть команду: "));4243          switch ($command) {44              case '0':45                  exit(0);46              case '1':47                  selectProducts();48                  break;49              case '2':50                  showReceipt();51                  break;52              case '3':53                  setupProfile();54                  break;55              default:56                  echo "ПОМИЛКА! Введіть правильну команду\n";57                  break;58          }59      }60  }В.3 { smp-pzpi-23-5-salohub-andrii-lab2-code.php }GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab2/spm-pzpi-23-5-salohub-andrii-lab2/smp-pzpi-23-5-salohub-andrii-lab2-code.php70  function selectProducts()71  {72      global $products, $cart, $MIN_QUANTITY, $MAX_QUANTITY;74      while (true) {75          showProductsList();76          $choice = trim(readline("Виберіть товар: "));78          if ($choice === '0') {79              return;80          }82          if (!isset($products[(int)$choice])) {83              echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";84              continue;85          }87          $selectedProduct = $products[(int)$choice];88          echo "Вибрано: {$selectedProduct['name']}\n";89          $quantity = (int)trim(readline("Введіть кількість, штук: "));91          if ($quantity < $MIN_QUANTITY || $quantity >= $MAX_QUANTITY) {92              echo "ПОМИЛКА! Кількість повинна бути більше {$MIN_QUANTITY} і менше {$MAX_QUANTITY}\n";93              continue;94          }96          if ($quantity < $MIN_QUANTITY) {97              echo "ПОМИЛКА! Кількість не може бути від'ємною.\n";98          } elseif ($quantity === 0) {99              if (isset($cart[$choice])) {100                 unset($cart[$choice]);101                 echo "ВИДАЛЯЮ ТОВАР З КОШИКА\n";102             } else {103                 echo "Товару немає в кошику для видалення.\n";104             }105             if (empty($cart)) {106                 echo "КОШИК ПОРОЖНІЙ\n";107             } else {108                 $cart[$choice] = $quantity;109                 echo "У КОШИКУ:\n";110                 $nameWidth = getMaxNameLength() + 1;112                 $nameHeader = custom_str_pad('НАЗВА', $nameWidth);113                 echo "{$nameHeader} КІЛЬКІСТЬ\n";115                 foreach ($cart as $productId => $quantity) {116                     if ($quantity > $MIN_QUANTITY) {117                         $paddedName = custom_str_pad($products[$productId]['name'], $nameWidth);118                         echo "{$paddedName} {$quantity}\n";119                     }120                 }121             }122         } elseif ($quantity >= $MAX_QUANTITY) {123             echo "ПОМИЛКА! Кількість товару не може бути 100 або більше.\n";124         } else {125             $cart[$choice] = $quantity;126             echo "У КОШИКУ:\n";127             $nameWidth = getMaxNameLength() + 1;129             $nameHeader = custom_str_pad('НАЗВА', $nameWidth);130             echo "{$nameHeader} КІЛЬКІСТЬ\n";132             foreach ($cart as $productId => $quantity) {133                 if ($quantity > $MIN_QUANTITY) {134                     $paddedName = custom_str_pad($products[$productId]['name'], $nameWidth);135                     echo "{$paddedName} {$quantity}\n";136                 }137             }138         }139         echo "\n";140     }141 }В.4 { smp-pzpi-23-5-salohub-andrii-lab2-code.php }GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab2/spm-pzpi-23-5-salohub-andrii-lab2/smp-pzpi-23-5-salohub-andrii-lab2-code.php173 function showReceipt()174 {175     global $products, $cart, $MIN_QUANTITY;176     if (empty($cart)) {177         echo "\nВаш кошик порожній.\n";178         return;179     }181     $nameWidth = getMaxNameLength() + 1;182     $nameHeader = custom_str_pad('НАЗВА', $nameWidth);183     $priceHeader = custom_str_pad('ЦІНА', 5);184     $quantityHeader = custom_str_pad('КІЛЬКІСТЬ', 10);185     $costHeader = custom_str_pad('ВАРТІСТЬ', 8);186     echo "№  {$nameHeader} {$priceHeader} {$quantityHeader} {$costHeader}\n";188     $totalSum = 0;189     $itemNumber = 1;191     foreach ($cart as $productId => $quantity) {192         if ($quantity > $MIN_QUANTITY) {193             $product = $products[$productId];194             $itemCost = $product['price'] * $quantity;195             $totalSum += $itemCost;197             $paddedName = custom_str_pad($product['name'], $nameWidth);198             printf(199                 "%-2d %s %-5d %-10d %d\n",200                 $itemNumber++,201                 $paddedName,202                 $product['price'],203                 $quantity,204                 $itemCost205             );206         }207     }208     echo "РАЗОМ ДО СПЛАТИ: {$totalSum}\n";209     echo "\n";210 }В.5 { Змістовна_назва_першого_файла_з_програмним_кодом }GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab2/spm-pzpi-23-5-salohub-andrii-lab2/smp-pzpi-23-5-salohub-andrii-lab2-code.php212 function setupProfile()213 {214     global $userName, $userAge, $MIN_AGE, $MAX_AGE;216     while (true) {217         $name = trim(readline("Ваше ім'я: "));219         if (empty($name) || !preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄґҐ]/', $name)) {220             echo "ПОМИЛКА! Ім'я повинно містити хоча б одну літеру\n";221             continue;222         }224         $userName = $name;225         break;226     }228     while (true) {229         $age = (int)trim(readline("Ваш вік: "));231         if ($age < $MIN_AGE || $age > $MAX_AGE) {232             echo "ПОМИЛКА! Вік повинен бути від {$MIN_AGE} до {$MAX_AGE} років\n";233             continue;234         }236         $userAge = $age;237         break;238     }240     echo "\n";241     echo "Ваше ім'я: {$userName}\n";242     echo "Ваш вік: {$userAge}\n";243     echo "\n";244 }В.6 { smp-pzpi-23-5-salohub-andrii-lab2-code.php }GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab2/spm-pzpi-23-5-salohub-andrii-lab2/smp-pzpi-23-5-salohub-andrii-lab2-code.php246 function utf8_char_count($string)247 {248     $length = 0;249     $i = 0;250     $bytes = strlen($string);252     while ($i < $bytes) {253         $byte = ord($string[$i]);254         if ($byte < 0x80) {255             $i += 1;256         } elseif ($byte < 0xE0) {257             $i += 2;258         } elseif ($byte < 0xF0) {259             $i += 3;260         } else {261             $i += 4;262         }263         $length++;264     }266     return $length;267 }2