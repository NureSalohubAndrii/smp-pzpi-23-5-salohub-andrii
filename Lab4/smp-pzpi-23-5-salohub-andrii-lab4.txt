МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИКАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇЗвітз лабораторної роботи № 4 з дисципліниСкриптові мови програмуванняВиконала:                                                                         Перевірив:ст. гр. ПЗПІ-23-5                        				ст. викладач кафедри ПІСалогуб Андрій 						          Сокорчук Ігор ПетровичХарків 2025
1 ІСТОРІЯ ЗМІН№ДатаВерсія звітуОпис змін та виправлень123.05.20250.1Створено розділ “Історія Змін”
2 ЗАВДАННЯ     Використовуючи матеріал попередніх лабораторних робіт, потрібно додатитакий функціонал:1. Прибрати дублювання шапки і підвалу сайту (якщо воно є).2. Додати сторінку логіна. Обмежити доступ до сайту не залогіненимкористувачам.3. Додати сторінку профілю з можливістю завантажити фото.
3 ОПИС ВИКОНАНОЇ РОБОТИ     Код складається з кількох файлів, які забезпечують функціональність інтернет-магазину: header.php, footer.php, index.php, main.php, config.php, credential.php, profile.php, cart.php, checkout.php, login.php, logout.php, page404.php, products.php, а також додаткового profile.php (з папки pages) та register.php. Нижче наведено детальний опис кожного компонента з посиланнями на відповідні рядки коду, пронумеровані раніше.     Файл header.php (рядки 1–54) відповідає за відображення шапки сайту та перевірку авторизації користувача. Код наведено в додатку В.1.• Перевірка авторизації (рядки 2–5): Якщо сесія $_SESSION['username'] не встановлена і поточна сторінка не є login.php, register.php або page404.php, користувач перенаправляється на сторінку помилки 404 (page404.php).• HTML-структура (рядки 8–54): Містить мета-теги, підключення CSS (style.css, рядок 13) та навігаційну панель.• Навігація (рядки 19–53): Відображає посилання на сторінки: "Головна" (рядки 21–23), "Товари" (рядки 26–28), "Кошик" (рядки 31–33), "Профіль" (рядки 36–38) та умовно "Вийти" (рядки 42–44) або "Вхід" (рядки 48–50) залежно від статусу авторизації. Активне посилання позначається класом nav__link--active.     Файл footer.php (рядки 1–11) відповідає за відображення підвалу сайту:• Навігація (рядки 2–7): Містить посилання на основні розділи: "Головна", "Товари", "Кошик", "Профіль".• HTML-структура (рядки 1–11): Завершує контейнер <div class="container"> та HTML-документ (</body>, </html>).1      <footer class="footer">2        <div class="footer__nav">3          <a href="/index.php" class="footer__link">Головна</a> |4          <a href="/pages/products.php" class="footer__link">Товари</a> |5          <a href="/pages/cart.php" class="footer__link">Кошик</a> |6          <a href="/pages/profile.php" class="footer__link">Профіль</a>7        </div>8      </footer>9    </div>10 </body>11 </html>     Файл index.php (рядки 1–15) (вигляд наведено на рис. Б.4) відповідає за головну сторінку магазину:• Підключення конфігурації (рядок 2): Імпортує функції з config.php.• Шапка (рядок 5): Включає header.php.• Тіло (рядки 7–13): Відображає привітання ("Вас вітає магазин 'Весна'") та кнопку "Перейти до покупок" (рядок 11), яка веде на сторінку products.php.• Підвал (рядок 15): Включає footer.php.1  <?php2  require_once './db/config.php';3  ?>5  <?php include 'header.php'; ?>7  <main class="home-page">8    <h1>Вас вітає магазин "Весна"</h1>9    <p>Ласкаво просимо до онлайн-магазину!</p>10   <div class="home-page__buttons">11     <a href="./pages/products.php" class="btn">Перейти до покупок</a>12   </div>13 </main>15 <?php include 'footer.php'; ?>     Файл main.php (рядки 1–43) відповідає за маршрутизацію сторінок на основі параметра page у запиті. Код наведено в додатку В.2.• Ініціалізація сесії (рядок 2): Запускає сесію.• Вибір сторінки (рядок 3): Отримує значення page із $_GET['page'] або встановлює за замовчуванням home.• Шапка (рядок 5): Включає header.php.• Маршрутизація (рядки 10–39): Використовує switch для підключення відповідних сторінок (cart.php, profile.php, products.php, login.php, register.php, logout.php, checkout.php). За замовчуванням, якщо користувач не авторизований, відображається page404.php (рядок 34), інакше — index.php (рядок 36).• Підвал (рядок 43): Включає footer.php.     Файл config.php (рядки 1–160) відповідає за ініціалізацію бази даних, управління товарами та кошиком. Код наведено в додатку В.3.• Ініціалізація бази даних (init_db, рядки 5–42): Створює SQLite базу даних (store.db) з таблицями products (рядки 13–18) та cart_items (рядки 20–28). Якщо таблиці відсутні, додаються початкові товари (рядки 30–38).• Отримання бази даних (get_db, рядки 44–51): Забезпечує єдиний екземпляр підключення до бази даних.• Закриття бази даних (close_db, рядки 53–60): Закриває підключення до бази даних.• Отримання товарів (get_products, рядки 62–73): Виконує запит до таблиці products і повертає масив товарів.• Отримання елементів кошика (get_cart_items, рядки 75–95): Отримує товари кошика для поточної сесії, об'єднуючи дані з таблиць cart_items і products.• Додавання до кошика (add_to_cart, рядки 97–132): Додає товар до кошика або оновлює кількість, якщо товар уже є (рядки 112–122).• Оновлення кошика (update_cart_item, рядки 134–148): Змінює кількість товару або видаляє його, якщо кількість ≤ 0 (рядки 138–141).• Підрахунок загальної суми (calculate_cart_total, рядки 150–160): Обчислює загальну вартість товарів у кошику.     Файл credential.php (рядки 1–6) містить статичні облікові дані для авторизації.1  <?php2  $credentials = [3      'userName' => 'Andrii',4      'password' => '12345'5  ];6  ?>     Файл profile.php (з папки db, рядки 1–9) містить статичні дані профілю користувача. 1  <?php2  $profile = array (3      'first_name' => 'АНДРІй',4      'last_name' => 'Салогуб',5      'birth_date' => '2006-10-10',6      'bio' => 'Салогуб Андрій, студент ХНУРЕ, 10.10.2006,asdfsdfasfasdfsdfasf.',7      'profile_picture' => '683178402cb02.jpg',8  );9  ?>     Файл cart.php (рядки 1–74) на рис. Б.6 відповідає за сторінку кошика, яка відображає обрані товари або повідомлення про порожній кошик. Код наведено в додатку В.4.• Обробка POST-запиту (рядки 4–9): Видаляє товари з кошика через update_cart_item (рядок 7) при натисканні кнопки "Видалити".• Отримання даних кошика (рядки 11–12): Викликає get_cart_items та calculate_cart_total для отримання товарів і загальної суми.• Шапка (рядок 15): Включає header.php з активним посиланням на "Кошик" (рядки 31–33).• Тіло (рядки 17–72): o Якщо встановлено $_SESSION['checkout_success'] (рядки 19–24), відображається повідомлення про успішне замовлення з кнопкою "Продовжити покупки".o Якщо кошик не порожній (рядки 25–65), показується таблиця з колонками: ID, назва, ціна, кількість, сума, дія (видалення, рядки 42–47). Загальна сума відображається в футері таблиці (рядки 51–57).o Якщо кошик порожній (рядки 66–70), відображається повідомлення "Ваш кошик порожній" з посиланням "Перейти до покупок".• Підвал (рядок 74): Включає footer.php.     Файл checkout.php (рядки 1–14) відповідає за оформлення замовлення:• Очищення кошика (рядки 5–8): Видаляє всі товари з кошика через update_cart_item.• Прапорець успішного замовлення (рядок 10): Встановлює $_SESSION['checkout_success'] = true.• Перенаправлення (рядки 12–13): Перенаправляє на сторінку cart.php.1  <?php2  require_once '../db/config.php';3  session_start();5  $cart_items = get_cart_items();6  foreach ($cart_items as $item) {7      update_cart_item($item['id'], 0);8  }10 $_SESSION['checkout_success'] = true;12 header('Location: cart.php');13 exit;14 ?>     Файл login.php (рядки 1–43) відповідає за сторінку входу. Код наведено в додатку В.5, вигляд наведено на рис. Б.3.• Обробка POST-запиту (рядки 5–19): Перевіряє введені ім'я користувача та пароль, порівнюючи з даними з credential.php. Якщо дані правильні, встановлює $_SESSION['username'] і $_SESSION['login_time'] (рядки 12–13) та перенаправляє на index.php (рядок 14). Інакше відображається помилка (рядки 9–17).• Шапка (рядок 22): Включає header.php з активним посиланням на "Вхід" (рядки 48–50 у header.php).• Тіло (рядки 24–41): Відображає форму входу з полями для імені користувача та пароля (рядки 29–37) та посилання на сторінку реєстрації (рядок 40).• Підвал (рядок 43): Включає footer.php.   Файл logout.php (рядки 1–6) відповідає за вихід із системи.   Файл page404.php (рядки 1–8) відповідає за сторінку помилки 404, вигляд наведено на рис. Б1.• Шапка (рядок 1): Включає header.php.• Тіло (рядки 3–6): Відображає повідомлення про помилку 404 із посиланнями на сторінки входу та реєстрації.• Підвал (рядок 8): Включає footer.php.     Файл products.php (рядки 1–44) на рис. Б.5 відповідає за сторінку товарів, яка обробляє відображення товарів і додавання до кошика. Код наведено в додатку В.6.• Обробка POST-запиту (рядки 4–13): При натисканні кнопки "Додати" викликає add_to_cart з product_id і quantity (рядки 9–10).• Отримання товарів (рядок 15): Викликає get_products для отримання списку товарів.• Шапка (рядок 18): Включає header.php з активним посиланням на "Товари" (рядки 26–28 у header.php).• Тіло (рядки 20–42): Відображає список товарів у вигляді форм (рядки 23–37), що містять: o Назву товару (рядок 27).o Поле для кількості (рядки 28–29).o Ціну (рядок 31).o Кнопку "Додати" (рядки 32–33).o Кнопку "Перейти до кошика" (рядок 40).• Підвал (рядок 44): Включає footer.php.     Файл profile.php (з папки pages, рядки 1–126) на рис. Б.7 відповідає за сторінку профілю користувача. Код наведено в додатку В.7.• Перевірка авторизації (рядки 4–7): Якщо $_SESSION['username'] не встановлено, перенаправляє на login.php.• Підключення даних (рядки 9–14): Імпортує дані з credential.php та profile.php (з папки db).• Обробка POST-запиту (рядки 19–78): Перевіряє та оновлює дані профілю: o Перевірка обов'язкових полів (рядки 25–32): Ім'я, прізвище, дата народження, біографія.o Обробка завантаження зображення (рядки 42–64): Перевіряє тип файлу та переміщує його до папки Uploads.o Збереження даних профілю (рядки 67–75): Записує оновлені дані в profile.php (з папки db).• Шапка (рядок 81): Включає header.php з активним посиланням на "Профіль" (рядки 36–38 у header.php).• Тіло (рядки 83–124): Відображає: o Повідомлення про помилки або успіх (рядки 85–90).o Фотографію профілю (рядки 91–96).o Форму редагування профілю з полями для імені, прізвища, дати народження, біографії та завантаження фото (рядки 98–121).• Підвал (рядок 126): Включає footer.php.     Файл register.php (рядки 1–34) відповідає за сторінку реєстрації. Код наведено в додатку В.8, вигляд наведено на рис. Б.2.• Обробка POST-запиту (рядки 5–10): Наразі повертає повідомлення "Реєстрація тимчасово недоступна" (рядок 9).• Шапка (рядок 13): Включає header.php з активним посиланням на "Вхід" (рядки 48–50 у header.php).• Тіло (рядки 15–32): Відображає форму реєстрації з полями для імені користувача та пароля (рядки 20–28) та посилання на сторінку входу (рядок 31). Примітка: у коді є помилка — тег <schaft-form> (рядок 20) має бути <form>.• Підвал (рядок 34): Включає footer.php.     
4 ВИСНОВКИ     У рамках лабораторної роботи було реалізовано додатковий функціонал для веб-сайту з метою оптимізації структури, забезпечення безпеки та розширення можливостей користувацького інтерфейсу. Зокрема, було усунуто дублювання шапки та підвалу сайту шляхом винесення їх у окремі компоненти або шаблони, що сприяло підвищенню читабельності коду, полегшенню його підтримки та зменшенню надлишковості.     Для забезпечення обмеженого доступу до сайту було додано сторінку логіну, яка дозволяє користувачам аутентифікуватися. Реалізовано механізм обмеження доступу до контенту для неавторизованих користувачів, що підвищило рівень безпеки та персоналізації веб-додатку.     Крім того, створено сторінку профілю користувача з функціоналом завантаження фотографії. Ця функція дозволяє користувачам персоналізувати свої профілі, завантажуючи зображення, які зберігаються на сервері або в базі даних, що забезпечує зручність використання та розширює можливості взаємодії з сайтом.     Запроваджені зміни сприяють підвищенню зручності, безпеки та функціональності веб-сайту, а також відповідають сучасним стандартам розробки веб-додатків. Робота дозволила поглибити знання у сфері оптимізації коду, роботи з аутентифікацією та обробки файлів у веб-розробці.
ДОДАТОК АВІДЕОЗАПИСВідеозапис презентації результатів лабораторної роботи: https://youtu.be/cnGX8_qx5MoХронологічний опис відеозапису: 00:00 - Вступне представлення 00:10 - Пояснення коду в файлі header.php 00:38 - Пояснення коду в файлі footer.php 00:43 - Пояснення коду в файлі main.php 01:11 - Пояснення коду в файлі register.php 01:30 - Пояснення коду в файлі login.php 02:13 - Пояснення коду в файлі page404.php 02:27 - Пояснення коду в файлі profile.php 04:17 - Пояснення коду в файлі logout.php 04:26 - Пояснення коду в файлі config.php 06:30 - Пояснення коду в файлі products.php 06:54 - Пояснення коду в файлі cart.php 07:47 - Пояснення коду в файлі checkout.php 08:10 - Пояснення коду в файлі index.php 08:31 - Демонстрація роботи сайту
ДОДАТОК БГрафічні матеріалиРисунок Б.1 — Сторінка 404Рисунок Б.2 — Сторінка реєстраціїРисунок Б.3 — Сторінка входуРисунок Б.4 — Головна сторінкаРисунок Б.5 — Сторінка товарівРисунок Б.6 — Сторінка кошикуРисунок Б.7 — Сторінка профілю
ДОДАТОК ВПрограмний кодВ.1 {./ header.php}GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab4/smp-pzpi-23-5-salohub-andrii-lab4/header.php1  <?php2  if (!isset($_SESSION['username']) && !in_array(basename($_SERVER['PHP_SELF']), ['login.php', 'register.php', 'page404.php'])) {3      header('Location: /pages/page404.php');4      exit;5  }6  ?>78  <!DOCTYPE html>9  <html lang="uk">10 <head>11   <meta charset="UTF-8">12   <meta name="viewport" content="width=device-width, initial-scale=1.0">13   <link rel="stylesheet" href="<?php echo (basename(__DIR__) == 'pages') ? '../style.css' : '/style.css'; ?>">14   <title>Магазин Весна</title>15 </head>16 <body>17   <div class="container">18     <header class="header">19       <nav class="nav">20         <div class="nav__item">21           <a href="/index.php" class="nav__link <?php echo (basename($_SERVER['PHP_SELF']) == 'index.php') ? 'nav__link--active' : ''; ?>">22             Головна23           </a>24         </div>25         <div class="nav__item">26           <a href="/pages/products.php" class="nav__link <?php echo (basename($_SERVER['PHP_SELF']) == 'products.php') ? 'nav__link--active' : ''; ?>">27             Товари28           </a>29         </div>30         <div class="nav__item">31           <a href="/pages/cart.php" class="nav__link <?php echo (basename($_SERVER['PHP_SELF']) == 'cart.php') ? 'nav__link--active' : ''; ?>">32             Кошик33           </a>34         </div>35         <div class="nav__item">36           <a href="/pages/profile.php" class="nav__link <?php echo (basename($_SERVER['PHP_SELF']) == 'profile.php') ? 'nav__link--active' : ''; ?>">37             Профіль38           </a>39         </div>40         <?php if (isset($_SESSION['username'])): ?>41           <div class="nav__item">42             <a href="/pages/logout.php" class="nav__link">43               Вийти44             </a>45           </div>46         <?php else: ?>47           <div class="nav__item">48             <a href="/pages/login.php" class="nav__link <?php echo (basename($_SERVER['PHP_SELF']) == 'login.php') ? 'nav__link--active' : ''; ?>">49               Вхід50             </a>51           </div>52         <?php endif; ?>53       </nav>54     </header>В.2 {./ main.php}GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab4/smp-pzpi-23-5-salohub-andrii-lab4/main.php1  <?php2  session_start();3  $page = isset($_GET['page']) ? $_GET['page'] : 'home';45  include 'header.php';6  ?>78  <main>9    <?php10   switch ($page) {11       case 'cart':12           require_once 'pages/cart.php';13           break;14       case 'profile':15           require_once 'pages/profile.php';16           break;17       case 'products':18           require_once 'pages/products.php';19           break;20       case 'login':21           require_once 'pages/login.php';22           break;23       case 'register':24           require_once 'pages/register.php';25           break;26       case 'logout':27           require_once 'pages/logout.php';28           break;29       case 'checkout':30           require_once 'pages/checkout.php';31           break;32       default:33           if (!isset($_SESSION['username'])) {34               require_once 'pages/page404.php';35           } else {36               require_once 'index.php';37           }38           break;39   }40 ?>41 </main>4243 <?php include 'footer.php'; ?>В.3 {./db/config.php}GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab4/smp-pzpi-23-5-salohub-andrii-lab4/db/config.php1  <?php2  $DB_FILE = __DIR__ . '/store.db';3  session_start();45  function init_db()6  {7      global $DB_FILE;8      $db = new SQLite3($DB_FILE);910     $result = $db->query("SELECT name FROM sqlite_master WHERE type='table' AND name='products'");11     if (!$result->fetchArray()) {12         $db->exec('13             CREATE TABLE products (14                 id INTEGER PRIMARY KEY AUTOINCREMENT,15                 name TEXT NOT NULL,16                 price DECIMAL(10,2) NOT NULL17             )18         ');1920         $db->exec('21             CREATE TABLE cart_items (22                 id INTEGER PRIMARY KEY AUTOINCREMENT,23                 session_id TEXT NOT NULL,24                 product_id INTEGER NOT NULL,25                 quantity INTEGER NOT NULL DEFAULT 1,26                 FOREIGN KEY (product_id) REFERENCES products(id)27             )28         ');2930         $db->exec("INSERT INTO products (name, price) VALUES31             ('Молоко пастеризоване', 12),32             ('Хліб чорний', 9),33             ('Сир білий', 21),34             ('Сметана 20%', 25),35             ('Кефір 1%', 19),36             ('Вода газована', 18),37             ('Печиво \"Весна\"', 14)38         ");39     }4041     return $db;42 }4344 function get_db()45 {46     static $db = null;47     if ($db === null) {48         $db = init_db();49     }50     return $db;51 }5253 function close_db()54 {55     global $db;56     if ($db !== null) {57         $db->close();58         $db = null;59     }60 }6162 function get_products()63 {64     $db = get_db();65     $result = $db->query('SELECT * FROM products');6667     $products = [];68     while ($row = $result->fetchArray(SQLITE3_ASSOC)) {69         $products[$row['id']] = $row;70     }7172     return $products;73 }7475 function get_cart_items()76 {77     $db = get_db();78     $session_id = session_id();7980     $stmt = $db->prepare('81         SELECT c.id, c.product_id, c.quantity, p.name, p.price 82         FROM cart_items c83         JOIN products p ON c.product_id = p.id84         WHERE c.session_id = :session_id85     ');86     $stmt->bindValue(':session_id', $session_id, SQLITE3_TEXT);87     $result = $stmt->execute();8889     $cart_items = [];90     while ($row = $result->fetchArray(SQLITE3_ASSOC)) {91         $cart_items[] = $row;92     }9394     return $cart_items;95 }9697 function add_to_cart($product_id, $quantity)98 {99     $db = get_db();100    $session_id = session_id();101102    $stmt = $db->prepare('103        SELECT id, quantity FROM cart_items 104        WHERE session_id = :session_id AND product_id = :product_id105    ');106    $stmt->bindValue(':session_id', $session_id, SQLITE3_TEXT);107    $stmt->bindValue(':product_id', $product_id, SQLITE3_INTEGER);108    $result = $stmt->execute();109110    $existing_item = $result->fetchArray(SQLITE3_ASSOC);111112    if ($existing_item) {113        $new_quantity = $existing_item['quantity'] + $quantity;114        $stmt = $db->prepare('115            UPDATE cart_items 116            SET quantity = :quantity 117            WHERE id = :id118        ');119        $stmt->bindValue(':quantity', $new_quantity, SQLITE3_INTEGER);120        $stmt->bindValue(':id', $existing_item['id'], SQLITE3_INTEGER);121        $stmt->execute();122    } else {123        $stmt = $db->prepare('124            INSERT INTO cart_items (session_id, product_id, quantity)125            VALUES (:session_id, :product_id, :quantity)126        ');127        $stmt->bindValue(':session_id', $session_id, SQLITE3_TEXT);128        $stmt->bindValue(':product_id', $product_id, SQLITE3_INTEGER);129        $stmt->bindValue(':quantity', $quantity, SQLITE3_INTEGER);130        $stmt->execute();131    }132 }133134 function update_cart_item($item_id, $quantity)135 {136    $db = get_db();137138    if ($quantity <= 0) {139        $stmt = $db->prepare('DELETE FROM cart_items WHERE id = :id');140        $stmt->bindValue(':id', $item_id, SQLITE3_INTEGER);141    } else {142        $stmt = $db->prepare('UPDATE cart_items SET quantity = :quantity WHERE id = :id');143        $stmt->bindValue(':quantity', $quantity, SQLITE3_INTEGER);144        $stmt->bindValue(':id', $item_id, SQLITE3_INTEGER);145    }146147    $stmt->execute();148 }149150 function calculate_cart_total()151 {152    $cart_items = get_cart_items();153    $total = 0;154155    foreach ($cart_items as $item) {156        $total += $item['price'] * $item['quantity'];157    }158159    return $total;160 }В.4 {./pages/cart.php}GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab4/smp-pzpi-23-5-salohub-andrii-lab4/pages/cart.php1  <?php2  require_once '../db/config.php';34  if ($_SERVER['REQUEST_METHOD'] === 'POST') {5      if (isset($_POST['action']) && $_POST['action'] === 'remove' && isset($_POST['item_id'])) {6          $item_id = (int)$_POST['item_id'];7          update_cart_item($item_id, 0);8      }9  }1011 $cart_items = get_cart_items();12 $total = calculate_cart_total();13 ?>1415 <?php include '../header.php'; ?>1617 <main class="cart-page">18   <h1>Ваш кошик</h1>19   <?php if (isset($_SESSION['checkout_success']) && $_SESSION['checkout_success']): ?>20     <div class="cart-page__success">21       <p>Дякуємо за ваше замовлення!</p>22       <a href="products.php" class="btn">Продовжити покупки</a>23     </div>24     <?php unset($_SESSION['checkout_success']); ?>25   <?php elseif (!empty($cart_items)): ?>26     <div class="cart-table">27       <div class="cart-table__header">28         <div class="cart-table__cell">ID</div>29         <div class="cart-table__cell">Назва</div>30         <div class="cart-table__cell">Ціна</div>31         <div class="cart-table__cell">Кількість</div>32         <div class="cart-table__cell">Сума</div>33         <div class="cart-table__cell">Дія</div>34       </div>35       <?php foreach ($cart_items as $index => $item): ?>36         <div class="cart-table__row <?php echo $index % 2 === 0 ? 'cart-table__row--even' : 'cart-table__row--odd'; ?>">37           <div class="cart-table__cell"><?php echo $index + 1; ?></div>38           <div class="cart-table__cell"><?php echo htmlspecialchars($item['name']); ?></div>39           <div class="cart-table__cell"><?php echo number_format($item['price'], 2); ?></div>40           <div class="cart-table__cell"><?php echo $item['quantity']; ?></div>41           <div class="cart-table__cell"><?php echo number_format($item['price'] * $item['quantity'], 2); ?></div>42           <div class="cart-table__cell">43             <form method="post" action="cart.php">44               <input type="hidden" name="action" value="remove">45               <input type="hidden" name="item_id" value="<?php echo $item['id']; ?>">46               <button type="submit" class="btn-remove">Видалити</button>47             </form>48           </div>49         </div>50       <?php endforeach; ?>51       <div class="cart-table__footer">52         <div class="cart-table__cell">Всього</div>53         <div class="cart-table__cell"></div>54         <div class="cart-table__cell"></div>55         <div class="cart-table__cell"></div>56         <div class="cart-table__cell"><?php echo number_format($total, 2); ?></div>57         <div class="cart-table__cell"></div>58       </div>59     </div>60     <div class="cart-page__actions">61       <a href="products.php" class="btn">Продовжити покупки</a>62       <form method="post" action="checkout.php">63         <button type="submit" class="btn btn--primary">Оформити замовлення</button>64       </form>65     </div>66   <?php else: ?>67     <div class="cart-page__empty">68       <p>Ваш кошик порожній</p>69       <a href="products.php" class="btn">Перейти до покупок</a>70     </div>71   <?php endif; ?>72 </main>7374 <?php include '../footer.php'; ?>В.5 {./pages/login.php}GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab4/smp-pzpi-23-5-salohub-andrii-lab4/pages/login.php1  <?php2  require_once '../db/credential.php';3  session_start();45  if ($_SERVER['REQUEST_METHOD'] === 'POST') {6      $username = trim($_POST['username']);7      $password = $_POST['password'];89      if (empty($username) || empty($password)) {10         $error = "Усі поля обов'язкові";11     } elseif ($username === $credentials['userName'] && $password === $credentials['password']) {12         $_SESSION['username'] = $username;13         $_SESSION['login_time'] = time();14         header('Location: /index.php');15         exit;16     } else {17         $error = "Невірне ім'я користувача або пароль";18     }19 }20 ?>2122 <?php include '../header.php'; ?>2324 <main class="login-page">25   <h1>Вхід</h1>26   <?php if (isset($error)): ?>27     <div class="error"><?php echo htmlspecialchars($error); ?></div>28   <?php endif; ?>29   <form method="post" action="/pages/login.php" class="login-form">30     <div class="form-group">31       <label for="username">Ім'я користувача:</label>32       <input type="text" id="username" name="username" required>33     </div>34     <div class="form-group">35       <label for="password">Пароль:</label>36       <input type="password" id="password" name="password" required>37     </div>38     <button type="submit" class="btn btn--primary">Увійти</button>39   </form>40   <p>Немає акаунта? <a href="/pages/register.php">Зареєструйтесь</a></p>41 </main>4243 <?php include '../footer.php'; ?>В.6 {./pages/products.php}GitHub репозиторій: http://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab4/smp-pzpi-23-5-salohub-andrii-lab4/pages/products.php1  <?php2  require_once '../db/config.php';34  if ($_SERVER['REQUEST_METHOD'] === 'POST') {5      if (isset($_POST['product_id']) && isset($_POST['quantity'])) {6          $product_id = (int)$_POST['product_id'];7          $quantity = (int)$_POST['quantity'];89          if ($quantity > 0) {10             add_to_cart($product_id, $quantity);11         }12     }13 }1415 $products = get_products();16 ?>1718 <?php include '../header.php'; ?>1920 <main class="products-page">21   <h1>Виберіть товари</h1>22   <div class="products-list">23     <?php foreach ($products as $product): ?>24       <div class="product-item">25         <form method="post" action="products.php">26           <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">27           <div class="product-item__name"><?php echo htmlspecialchars($product['name']); ?></div>28           <div class="product-item__quantity">29             <input type="number" name="quantity" value="1" min="1" max="99" class="product-item__quantity-input">30           </div>31           <div class="product-item__price"><?php echo number_format($product['price'], 2); ?> грн</div>32           <div class="product-item__action">33             <button type="submit" class="btn">Додати</button>34           </div>35         </form>36       </div>37     <?php endforeach; ?>38   </div>39   <div class="products-page__action-buttons">40     <a href="cart.php" class="btn">Перейти до кошика</a>41   </div>42 </main>4344 <?php include '../footer.php'; ?>В.7 {./pages/profile.php}GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab4/smp-pzpi-23-5-salohub-andrii-lab4/pages/profile.php1  <?php2  session_start();34  if (!isset($_SESSION['username'])) {5      header('Location: /pages/login.php');6      exit;7  }89  require_once '../db/credential.php';10 include '../db/profile.php';1112 if (isset($_SESSION['profile'])) {13     $profile = $_SESSION['profile'];14 }1516 $error = '';17 $success = '';1819 if ($_SERVER['REQUEST_METHOD'] === 'POST') {20     $first_name = trim($_POST['first_name']);21     $last_name = trim($_POST['last_name']);22     $birth_date = trim($_POST['birth_date']);23     $bio = trim($_POST['bio']);2425     if (empty($first_name) || empty($last_name) || empty($birth_date) || empty($bio)) {26         $error = "Усі текстові поля обов'язкові";27     } elseif (strlen($first_name) <= 1 || strlen($last_name) <= 1) {28         $error = "Ім'я та прізвище мають бути довшими за 1 символ";29     } elseif (strtotime($birth_date) > strtotime('-16 years')) {30         $error = "Користувачу має бути не менше 16 років";31     } elseif (strlen($bio) < 50) {32         $error = "Стисла інформація має містити не менше 50 символів";33     } else {34         $new_profile = [35             'first_name' => $first_name,36             'last_name' => $last_name,37             'birth_date' => $birth_date,38             'bio' => $bio,39             'profile_picture' => $profile['profile_picture']40         ];4142         if (isset($_FILES['profile_picture']) && $_FILES['profile_picture']['error'] === UPLOAD_ERR_OK) {43             $upload_dir = __DIR__ . '/../Uploads/';44             if (!is_dir($upload_dir)) {45                 mkdir($upload_dir, 0755, true);46             }47             $file = $_FILES['profile_picture'];48             $allowed_types = ['image/jpeg', 'image/png', 'image/gif'];49             if (!in_array($file['type'], $allowed_types)) {50                 $error = "Непідтримуваний тип файлу";51             } else {52                 $ext = pathinfo($file['name'], PATHINFO_EXTENSION);53                 $filename = uniqid() . '.' . $ext;54                 $destination = $upload_dir . $filename;5556                 if (!move_uploaded_file($file['tmp_name'], $destination)) {57                     $error = "Помилка при завантаженні файлу";58                 } else {59                     $new_profile['profile_picture'] = $filename;60                 }61             }62         } elseif (empty($profile['profile_picture'])) {63             $error = "Необхідно завантажити фотографію";64         }6566         if (!$error) {67             $_SESSION['profile'] = $new_profile;6869             $profile_data = "<?php\n\$profile = " . var_export($new_profile, true) . ";\n?>";70             if (file_put_contents('../db/profile.php', $profile_data) === false) {71                 $error = "Помилка при збереженні даних";72             } else {73                 $success = "Дані успішно збережено!";74                 $profile = $new_profile;75             }76         }77     }78 }79 ?>8081 <?php include '../header.php'; ?>8283 <main class="profile-page">84   <h1>Ваш профіль</h1>85   <?php if ($error): ?>86     <div class="error"><?php echo htmlspecialchars($error); ?></div>87   <?php endif; ?>88   <?php if ($success): ?>89     <div class="success"><?php echo htmlspecialchars($success); ?></div>90   <?php endif; ?>91   <div class="profile-picture-container">92     <?php if (!empty($profile['profile_picture'])): ?>93       <img src="/Uploads/<?php echo htmlspecialchars($profile['profile_picture']); ?>?t=<?php echo time(); ?>" alt="Profile Picture" class="profile-picture">94     <?php else: ?>95       <p>Фотографію не завантажено</p>96     <?php endif; ?>97   </div>98   <form method="post" enctype="multipart/form-data" class="profile-form">99     <div class="form-group">100      <label for="first_name">Ім'я:</label>101      <input type="text" id="first_name" name="first_name" value="<?php echo htmlspecialchars($profile['first_name']); ?>" required>102    </div>103    <div class="form-group">104      <label for="last_name">Прізвище:</label>105      <input type="text" id="last_name" name="last_name" value="<?php echo htmlspecialchars($profile['last_name']); ?>" required>106    </div>107    <div class="form-group">108      <label for="birth_date">Дата народження:</label>109      <input type="date" id="birth_date" name="birth_date" value="<?php echo htmlspecialchars($profile['birth_date']); ?>" required>110    </div>111    <div class="form-group">112      <label for="bio">Про себе:</label>113      <textarea id="bio" name="bio" required><?php echo htmlspecialchars($profile['bio']); ?></textarea>114    </div>115    <div class="form-group">116      <label for="profile_picture">Завантажити нову фотографію:</label>117      <input type="file" id="profile_picture" name="profile_picture" accept="image/*">118      <?php if (!empty($profile['profile_picture'])): ?>119        <p class="form-note">Якщо не вибрати нову фотографію, буде збережено поточну.</p>120      <?php endif; ?>121    </div>122    <button type="submit" class="btn btn--primary">Зберегти зміни</button>123  </form>124 </main>125126 <?php include '../footer.php'; ?>В.8 {./pages/register.php}GitHub репозиторій: https://github.com/NureSalohubAndrii/smp-pzpi-23-5-salohub-andrii/blob/main/Lab4/smp-pzpi-23-5-salohub-andrii-lab4/pages/register.php1  <?php2  require_once '../db/credential.php';3  session_start();45  if ($_SERVER['REQUEST_METHOD'] === 'POST') {6      $username = trim($_POST['username']);7      $password = $_POST['password'];89      $error = "Реєстрація тимчасово недоступна";10 }11 ?>1213 <?php include '../header.php'; ?>1415 <main class="register-page">16   <h1>Реєстрація</h1>17   <?php if (isset($error)): ?>18     <div class="error"><?php echo htmlspecialchars($error); ?></div>19   <?php endif; ?>20   <form method="post" action="/pages/register.php" class="register-form">21     <div class="form-group">22       <label for="username">Ім'я користувача:</label>23       <input type="text" id="username" name="username" required>24     </div>25     <div class="form-group">26       <label for="password">Пароль:</label>27       <input type="password" id="password" name="password" required>28     </div>29     <button type="submit" class="btn btn--primary">Зареєструватись</button>30   </form>31   <p>Вже маєте акаунт? <a href="/pages/login.php">Увійдіть</a></p>32 </main>3334 <?php include '../footer.php'; ?>2